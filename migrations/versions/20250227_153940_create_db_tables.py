"""create db tables

Revision ID: c86e4208230d
Revises: 
Create Date: 2025-02-27 15:39:40.752400

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = 'c86e4208230d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('application_status', sa.Enum('Upcoming', 'Submitted', 'Interviewing', 'Rejected', 'Offered', name='application_status_enum'), nullable=False),
    sa.Column('company_name', sa.String(length=80), nullable=False),
    sa.Column('company_website', sa.String(length=2083), nullable=True),
    sa.Column('job_title', sa.String(length=80), nullable=False),
    sa.Column('job_details', sa.Text(), nullable=True),
    sa.Column('job_post_url', sa.String(length=2083), nullable=True),
    sa.Column('submission_details', sa.Text(), nullable=True),
    sa.Column('application_deadline', sa.Date(), nullable=False),
    sa.Column('cover_letter_url', sa.String(length=2083), nullable=True),
    sa.Column('resume_url', sa.String(length=2083), nullable=True),
    sa.Column('date_submitted', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('common_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=500), nullable=False),
    sa.Column('response', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application_interviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('interview_date', sa.Date(), nullable=False),
    sa.Column('interview_time', sa.String(length=7), nullable=False),
    sa.Column('interview_round', sa.String(length=20), nullable=False),
    sa.Column('interview_location', sa.String(length=9), nullable=False),
    sa.Column('interview_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application_offers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('offer_date', sa.Date(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('salary', sa.Integer(), nullable=False),
    sa.Column('offer_details', sa.Text(), nullable=True),
    sa.Column('offer_accepted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=300), nullable=False),
    sa.Column('response', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application_rejections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('rejection_date', sa.Date(), nullable=False),
    sa.Column('feedback_requested', sa.Boolean(), nullable=False),
    sa.Column('feedback_provided', sa.Boolean(), nullable=True),
    sa.Column('feedback_details', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE applications SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE application_interviews SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE application_offers SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE application_questions SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE application_rejections SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE common_questions SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('application_rejections')
    op.drop_table('application_questions')
    op.drop_table('application_offers')
    op.drop_table('application_interviews')
    op.drop_table('common_questions')
    op.drop_table('applications')
    op.drop_table('users')
    # ### end Alembic commands ###
